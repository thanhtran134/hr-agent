"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class ExpansionPanelType(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TITLE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ICON_FIELD_NUMBER: builtins.int
    DISABLED_FIELD_NUMBER: builtins.int
    EXPANDED_FIELD_NUMBER: builtins.int
    HIDE_TOGGLE_FIELD_NUMBER: builtins.int
    ON_TOGGLE_HANDLER_ID_FIELD_NUMBER: builtins.int
    title: builtins.str
    description: builtins.str
    icon: builtins.str
    disabled: builtins.bool
    expanded: builtins.str
    hide_toggle: builtins.bool
    on_toggle_handler_id: builtins.str
    def __init__(
        self,
        *,
        title: builtins.str | None = ...,
        description: builtins.str | None = ...,
        icon: builtins.str | None = ...,
        disabled: builtins.bool | None = ...,
        expanded: builtins.str | None = ...,
        hide_toggle: builtins.bool | None = ...,
        on_toggle_handler_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["description", b"description", "disabled", b"disabled", "expanded", b"expanded", "hide_toggle", b"hide_toggle", "icon", b"icon", "on_toggle_handler_id", b"on_toggle_handler_id", "title", b"title"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["description", b"description", "disabled", b"disabled", "expanded", b"expanded", "hide_toggle", b"hide_toggle", "icon", b"icon", "on_toggle_handler_id", b"on_toggle_handler_id", "title", b"title"]) -> None: ...

global___ExpansionPanelType = ExpansionPanelType
